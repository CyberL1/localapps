name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build-and-release-executable:
    name: Build and release executable
    permissions: write-all
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - windows
          - linux
          - darwin
        arch:
          - amd64
          - arm64
        exclude:
          - os: windows
            arch: arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Build frontend
        run: npm install && npm run build
        working-directory: web
      - name: Build binary
        run: |
          export GOOS=${{ matrix.os }}
          export GOARCH=${{ matrix.arch }}
          go build -ldflags "-s -w -X localapps/constants.Version=${{ env.RELEASE_VERSION }}"
      - name: Pack binary
        run: zip localapps-${{ matrix.os }}-${{ matrix.arch }}.zip localapps${{ matrix.os == 'windows' && '.exe' || '' }}
      - name: Create release
        uses: ncipollo/release-action@v1.15.0
        with:
          tag: ${{ env.RELEASE_VERSION }}
          artifacts: localapps-${{ matrix.os }}-${{ matrix.arch }}.zip
          allowUpdates: true
  build-and-push-docker-image:
    name: Build and push docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/CyberL1/localapps
          tags: |
            type=raw,value=latest
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
