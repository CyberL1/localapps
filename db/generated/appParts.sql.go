// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: appParts.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createAppParts = `-- name: CreateAppParts :one
INSERT INTO app_parts (app_id) VALUES ($1)
RETURNING app_id
`

func (q *Queries) CreateAppParts(ctx context.Context, appID pgtype.Text) (pgtype.Text, error) {
	row := q.db.QueryRow(ctx, createAppParts, appID)
	var app_id pgtype.Text
	err := row.Scan(&app_id)
	return app_id, err
}

const getAppParts = `-- name: GetAppParts :one
SELECT app_id FROM app_parts WHERE app_id = $1
`

func (q *Queries) GetAppParts(ctx context.Context, appID pgtype.Text) (pgtype.Text, error) {
	row := q.db.QueryRow(ctx, getAppParts, appID)
	var app_id pgtype.Text
	err := row.Scan(&app_id)
	return app_id, err
}

const updateAppParts = `-- name: UpdateAppParts :one
UPDATE app_parts SET (app_id) = $2 WHERE app_id = $1
RETURNING app_id
`

func (q *Queries) UpdateAppParts(ctx context.Context, appID pgtype.Text) (pgtype.Text, error) {
	row := q.db.QueryRow(ctx, updateAppParts, appID)
	var app_id pgtype.Text
	err := row.Scan(&app_id)
	return app_id, err
}
